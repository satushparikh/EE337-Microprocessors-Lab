C51 COMPILER V9.60.7.0   SERIAL                                                            03/27/2023 13:58:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Objects\serial.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\se
                    -rial.lst) TABS(2) OBJECT(.\Objects\serial.obj)

line level    source

   1          #include <at89c5131.h>
   2          
   3          bit tx_complete = 0,rx_complete = 0; //Bit flags for interrupts
   4          
   5          /**********************************************************
   6             uart_init(): 
   7            Initialization function to be completed
   8            Initializes UART peripheral for 8-bit transfer, 
   9            1 start and 1 stop bits. 
  10            
  11            Please write TH1 value for required baud rate
  12          ***********************************************************/  
  13          void uart_init(void)
  14          {
  15   1        //TMOD=0x__;      //Configure Timer 1 in Mode 2
  16   1        //TH1=__;         //Load TH1 to obtain require Baudrate (Refer Serial.pdf for calculations)
  17   1        //SCON=0x__;      //Configure UART peripheral for 8-bit data transfer 
  18   1        //                //Start Timer 1
  19   1                          //Enable Serial Interrupt
  20   1                          //Enable Global Interrupt
  21   1        TMOD = 0x20;//use of timer 1 in mode 2 : 8 bit auto reload
  22   1        TH1  = -6;//sets baud rate to 4800 bps
  23   1        SCON = 0x50 ;
  24   1        TR1 = 1;//start timer 1
  25   1        ES = 1;//enables serial interrupt
  26   1        EA = 1;//enables all interrupts
  27   1        /*
  28   1        SCON register
  29   1        to usonly serial mode 1,8 bit data , 1 stop bit,1 start bit is of interest to us for which sm0=0 sm1=1
  30   1        RSM0 SM1 SM2 REN TB8 RB8 TI RI 
  31   1        SM0,SM1 are used to program start bit,stop bit and data bits
  32   1        EN if we want 8051 to both transfer and receive data REN must be set to 1,by making ren=0 receiver is dis
             -abled
  33   1        TB8=RB8=TM2=0 DON'T THINK MAKE 0
  34   1        TI AND RI ARE  transmitter and receiver interrupt flag 
  35   1         */
  36   1      }
  37          
  38          
  39          /**********************************************************
  40             transmit_char(<unsigned char ch>): 
  41            Transmits a character using UART
  42          ***********************************************************/  
  43          void transmit_char(unsigned char ch)
  44          {
  45   1        SBUF=ch;        //Load data in SBUF
  46   1        while(!tx_complete);      //Wait for tx_complete flag (interrupt to complete)
  47   1        tx_complete = 0;    //Clear tx_complete flag 
  48   1      }
  49          
  50          
  51          /**********************************************************
  52             transmit_string(<String pointer>): 
  53            Transmit a string using UART
C51 COMPILER V9.60.7.0   SERIAL                                                            03/27/2023 13:58:28 PAGE 2   

  54          ***********************************************************/  
  55          void transmit_string(unsigned char *s)
  56          {
  57   1        while(*s != 0)
  58   1        {
  59   2            transmit_char(*s++);
  60   2        }
  61   1      }
  62          
  63          
  64          /**********************************************************
  65             receive_char(): 
  66            Receives a character through UART. Returns a 
  67            character.
  68          ***********************************************************/    
  69          unsigned char receive_char(void)
  70          {
  71   1        unsigned char ch = 0;
  72   1        while(!rx_complete);        //Wait for rx_complete(interrupt to complete)
  73   1        rx_complete = 0;
  74   1        ch = SBUF;          //Read data from SBUF
  75   1        return ch;          //Return read character
  76   1      }
  77          
  78          
  79          /**********************************************************
  80             Serial_ISR(): 
  81            Interrupt service routine for UART interrupt.
  82            Determines whether it is a transmit or receive
  83            interrupt and raise corresponding flag.
  84            Transmit or receive functions (defined above) monitor
  85            for these flags to check if data transfer is done.
  86          ***********************************************************/  
  87          void serial_ISR(void) interrupt 4
  88          {
  89   1          if(TI==1)     //check whether TI is set
  90   1          {
  91   2            TI = 0;     //Clear TI flag
  92   2            tx_complete = 1;  //Set tx_complete flag indicating interrupt completion
  93   2          }
  94   1          else if(RI==1)      //check whether RI is set
  95   1          {
  96   2            RI = 0;     //Clear RI flag
  97   2            rx_complete = 1;  //Set rx_complete flag indicating interrupt completion
  98   2          }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
